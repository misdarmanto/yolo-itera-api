"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.route = void 0;
const express_1 = __importDefault(require("express"));
const controllers_1 = require("../controllers");
const vehicle_1 = require("../controllers/vehicle");
const user_1 = require("../controllers/user");
const middlewares_1 = require("../middlewares");
const traffics_1 = require("../controllers/traffics");
const statistic_1 = require("../controllers/statistic");
const admin_1 = require("../controllers/admin");
const route = (app) => {
    app.get("/", (req, res) => (0, controllers_1.index)(req, res));
    const statisticRouter = express_1.default.Router();
    app.use("/statistic", middlewares_1.middleware.useAuthorization, statisticRouter);
    statisticRouter.get("/", (req, res) => statistic_1.STATISTIC.all(req, res));
    const userRouter = express_1.default.Router();
    app.use("/users", middlewares_1.middleware.useAuthorization, userRouter);
    userRouter.post("/", (req, res) => user_1.USER.create(req, res));
    userRouter.get("/", (req, res) => user_1.USER.single(req, res));
    userRouter.get("/list", (req, res) => user_1.USER.list(req, res));
    userRouter.patch("/", (req, res) => user_1.USER.update(req, res));
    userRouter.delete("/", (req, res) => user_1.USER.delete(req, res));
    const adminRouter = express_1.default.Router();
    app.use("/admin", middlewares_1.middleware.useAuthorization, adminRouter);
    adminRouter.get("/list", (req, res) => admin_1.ADMIN.list(req, res));
    adminRouter.post("/login", (req, res) => admin_1.ADMIN.login(req, res));
    adminRouter.post("/register", (req, res) => admin_1.ADMIN.register(req, res));
    adminRouter.get("/logout", (req, res) => admin_1.ADMIN.logout(req, res));
    const vehicleRouter = express_1.default.Router();
    app.use("/vehicles", middlewares_1.middleware.useAuthorization, vehicleRouter);
    vehicleRouter.get("/list", (req, res) => vehicle_1.VEHICLE.list(req, res));
    vehicleRouter.get("/", (req, res) => vehicle_1.VEHICLE.single(req, res));
    vehicleRouter.post("/", (req, res) => vehicle_1.VEHICLE.create(req, res));
    vehicleRouter.patch("/", (req, res) => vehicle_1.VEHICLE.update(req, res));
    vehicleRouter.delete("/", (req, res) => vehicle_1.VEHICLE.delete(req, res));
    const trafficRouter = express_1.default.Router();
    app.use("/traffics", middlewares_1.middleware.useAuthorization, trafficRouter);
    trafficRouter.post("/verify", (req, res) => traffics_1.TRAFFICS.verify(req, res));
    trafficRouter.get("/list", (req, res) => traffics_1.TRAFFICS.list(req, res));
    trafficRouter.get("/", (req, res) => traffics_1.TRAFFICS.single(req, res));
};
exports.route = route;
